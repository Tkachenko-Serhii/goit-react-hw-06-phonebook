{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","hooks/localStorage.js","index.js","components/ContactList/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","inputChange","e","target","value","id","preventDefault","document","getElementById","reset","className","s","form","autoComplete","label","text","type","pattern","title","required","onChange","input","button","Filter","stateFilter","onChangeFilter","ContactItem","contact","onContactDel","item","onClick","ContactList","contacts","map","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","useMemo","toLowerCase","includes","find","alert","shortId","generate","data","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.12e1ca03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__3wFyG\",\"text\":\"Form_text__EPrn0\",\"button\":\"Form_button__1ZgTF\",\"input\":\"Form_input__10j_e\"};","import { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const inputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    document.getElementById(\"form\").reset();\r\n  };\r\n\r\n  return (\r\n    <form id='form' onSubmit={formSubmit} className={s.form} autoComplete='off'>\r\n      <label className={s.label}>\r\n        <span className={s.text}>Name</span>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={inputChange}\r\n          className={s.input}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        <span className={s.text}>Number</span>\r\n        <input\r\n          type='tel'\r\n          name='number'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          required\r\n          onChange={inputChange}\r\n          className={s.input}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button type='submit' className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ stateFilter, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        name='Find contact'\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n        value={stateFilter}\r\n        className={s.input}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({ contact, onContactDel }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.contact}>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button\r\n        className={s.button}\r\n        onClick={(e) => onContactDel(e.target.id)}\r\n        id={contact.id}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.exact({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nexport default function ContactList({ contacts, onContactDel }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onContactDel={onContactDel}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n};\r\n","import { useState, useMemo } from \"react\";\r\nimport useLocalStorage from \"./hooks/localStorage\";\r\nimport Form from \"./components/Form\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport shortId from \"shortid\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const getFormData = (name, number) => {\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      alert(name + \" is already in contacts\");\r\n      return;\r\n    }\r\n    const contact = { name, number, id: shortId.generate() };\r\n    setContacts([contact, ...contacts]);\r\n  };\r\n\r\n  const stateFilter = useMemo(() => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n  }, [contacts, filter]);\r\n\r\n  const onContactDel = (id) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='addForm'>\r\n        <h2 className='title'>Phonebook</h2>\r\n        <Form onSubmit={getFormData} />\r\n      </div>\r\n      <h2 className='title'>Contacts</h2>\r\n      <Filter\r\n        stateFilter={filter}\r\n        onChangeFilter={(data) => setFilter(data.toLowerCase())}\r\n      />\r\n      <ContactList contacts={stateFilter} onContactDel={onContactDel} />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1yB6u\",\"contact\":\"ContactItem_contact__sA_sj\",\"button\":\"ContactItem_button__Pwx-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__oDP6w\",\"input\":\"Filter_input__2dV0a\"};"],"sourceRoot":""}