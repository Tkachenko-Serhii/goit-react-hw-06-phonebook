{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","redux/actions.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","actions","addContact","createAction","payload","name","number","id","shortId","deleteContact","changeFilter","connect","dispatch","onFormSubmit","useState","setName","setNumber","onSubmit","e","preventDefault","document","getElementById","reset","className","s","form","autoComplete","label","text","type","pattern","title","required","onChange","target","value","input","button","state","filter","contacts","onChangeFilter","stateFilter","ContactItem","contact","onContactDel","item","onClick","filteredContacts","toLowerCase","includes","items","map","App","existingСontacts","JSON","parse","window","localStorage","getItem","createReducer","find","alert","updateContacts","setItem","stringify","updateContactsAfterDelete","combineReducers","store","configureStore","reducer","contactsReducer","defaultModules","set","PNotifyMobile","require","defaults","width","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.691321cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1yB6u\",\"contact\":\"ContactItem_contact__sA_sj\",\"button\":\"ContactItem_button__Pwx-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__oDP6w\",\"input\":\"Filter_input__2dV0a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__3wFyG\",\"text\":\"Form_text__EPrn0\",\"button\":\"Form_button__1ZgTF\",\"input\":\"Form_input__10j_e\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nimport shortId from \"shortid\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: shortId(),\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\nimport s from \"./Form.module.css\";\r\n\r\nfunction Form({ onFormSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    onFormSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    document.getElementById(\"form\").reset();\r\n  };\r\n\r\n  return (\r\n    <form id='form' onSubmit={onSubmit} className={s.form} autoComplete='off'>\r\n      <label className={s.label}>\r\n        <span className={s.text}>Name</span>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          className={s.input}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        <span className={s.text}>Number</span>\r\n        <input\r\n          type='tel'\r\n          name='number'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          onChange={(e) => {\r\n            setNumber(e.target.value);\r\n          }}\r\n          className={s.input}\r\n          value={number}\r\n          required\r\n        />\r\n      </label>\r\n      <button type='submit' className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFormSubmit: (name, number) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ stateFilter, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        name='Find contact'\r\n        onChange={onChangeFilter}\r\n        value={stateFilter}\r\n        className={s.input}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) => {\r\n    return dispatch(actions.changeFilter(e.target.value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({ contact, onContactDel }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.contact}>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button\r\n        className={s.button}\r\n        onClick={(e) => onContactDel(e.target.id)}\r\n        id={contact.id}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.exact({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nfunction ContactList({ contacts, onContactDel }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onContactDel={onContactDel}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n};\r\n\r\nconst filteredContacts = (contacts, filter) =>\r\n  contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: filteredContacts(contacts.items, contacts.filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onContactDel: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import Form from \"./components/Form\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='container'>\r\n      <div className='addForm'>\r\n        <h1 className='title'>Phonebook</h1>\r\n        <Form />\r\n      </div>\r\n      <h2 className='title'>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { alert } from \"@pnotify/core\";\r\n\r\nimport actions from \"./actions\";\r\n\r\nconst existingСontacts = JSON.parse(window.localStorage.getItem(\"contacts\"));\r\n\r\nconst items = createReducer(existingСontacts || [], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    if (state.find((contact) => contact.name === payload.name)) {\r\n      alert({\r\n        type: \"error\",\r\n        text: `${payload.name} is already in you contacts`,\r\n      });\r\n      return state;\r\n    }\r\n    const updateContacts = [...state, payload];\r\n    localStorage.setItem(\"contacts\", JSON.stringify(updateContacts));\r\n    return updateContacts;\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) => {\r\n    const updateContactsAfterDelete = state.filter(({ id }) => id !== payload);\r\n    localStorage.setItem(\"contacts\", JSON.stringify(updateContactsAfterDelete));\r\n    return updateContactsAfterDelete;\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport contactsReducer from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport { defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\ndefaultModules.set(PNotifyMobile, {});\nconst { defaults } = require(\"@pnotify/core\");\n\ndefaults.width = \"400px\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}